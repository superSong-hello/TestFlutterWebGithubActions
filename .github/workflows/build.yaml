name: build_and_deploy

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, closed]
  workflow_dispatch:

jobs:
  
  job_check:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.7.5' # 指定 Flutter 版本
#
#      - name: Clean and Install pub
#        run: |
#          flutter clean
#          flutter pub get

#      - name: Analyze project
#        run: flutter analyze
#
#      - name: Check for the existence of unformatted files
#        run: dart format --set-exit-if-changed lib/
#
#      - name: Metrics project
#        run: flutter pub run dart_code_metrics:metrics analyze lib/
#
#      - name: Test project
#        run: flutter test
      
  job_build_deploy:
    name: Build And Deploy
    runs-on: ubuntu-latest
    env:
      env_variables: debug
      BUCKET_NAME: test_flutter_bucket
    needs: job_check
#    if: ${{ github.event.action == 'closed' }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.5' # 指定 Flutter 版本

#      - name: Setup - gcloud / gsutil
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@v1
#        with:
#          service_account_key: ${{ secrets.GCP_SA_KEY }}
#          #          project_id: ${{ secrets.GCS_PROJECT }}
#          export_default_credentials: true

      - name: Auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      # Set environment variables
      - name: Set environment variables (debug)
        if: github.event.pull_request.base.ref == 'develop'
        run: echo "env_variables=debug" >> $GITHUB_ENV
      
      - name: Set environment variables (stg)
        if: github.event.pull_request.base.ref == 'release'
        run: echo "env_variables=stg" >> $GITHUB_ENV
        
      - name: Set environment variables (release)
        if: github.event.pull_request.base.ref == 'main'
        run: echo "env_variables=release" >> $GITHUB_ENV
        
      - name: Build Web
        run: |
          flutter build web --dart-define=MODE="${{ env.env_variables }}" --base-href="/" --web-renderer html
#          flutter build web --dart-define=MODE="${{ env.env_variables }}" --base-href="/TestFlutterWebGithubActions/" --web-renderer html
  
#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.TOKEN }}
#          publish_dir: ./build/web

      - name: Deploy
        run: |
          gsutil -m cp -r ./build/web/* gs://${{ env.BUCKET_NAME }}/
#          gsutil -m cp -r ./build/web/* gs://${{ env.BUCKET_NAME }}/${{ env.env_variables }}/

  job_notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [job_check, job_build_deploy]
    if: ${{ github.event.action == 'closed' }}
    steps:
      - name: Configure SMTP server
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          from: ${{ secrets.EMAIL_USERNAME }}
          to: songjichao225@163.com,songjichao225@sina.com
          subject: 'Build completed successfully_'
          body: 'Your build TestFlutterWebGithubActions project has completed successfully.'
